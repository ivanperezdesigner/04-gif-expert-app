{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","keys/keys.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,6BCDA,oCDCA,SAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDEAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,yBAAKc,UAAU,2CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDdwBK,CAAa1B,GAAhCa,EADyB,EAC9BN,KAAaa,EADiB,EACjBA,QAOpB,OACI,oCACI,4BAAMpB,GACLoB,GAAW,yCACZ,yBAAKJ,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACd,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEIbkB,EArBM,WAAO,IAAD,EACa1C,mBAAS,CAAC,eADvB,mBAChB2C,EADgB,KACJ5C,EADI,KAGvB,OACA,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAWA,UCXnC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d94a7094.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('')\n    \n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (inputValue.trim().length > 2){\n            setCategories (categ => [inputValue, ...categ])\n            setInputValue('')\n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type='text'\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import { apiKeyG } from '../keys/keys.js'\n\nexport const getGifs = async(category) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKeyG}`\n    const resp = await fetch(url)\n    const {data} = await resp.json()\n    // console.log(data)\n    \n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs\n}","export const accessKeyUnsplash = 'S3Q_Bi-FRVi5U2obXBLKQz7dVjfZpbGD9EcgbIH0kXA'\nexport const apiKeyG = 'cYFi6YJlARMjr3mo5YZZk0f1pT5717Qa'","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n    \n    return (\n        <div className=\"card animate__animated animate__flipInX\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem.js'\n\nexport const GifGrid = ({ category }) => {\n    const {data:images, loading} = useFetchGifs(category)\n\n    // useEffect(() => {\n    //     getGift(category)\n    //         .then(imgs => setImages( imgs))\n    // }, [category])\n\n    return (\n        <>\n            <h3>{ category }</h3>\n            {loading && <p>Loading...</p>}\n            <div className='card-grid'>\n                {\n                    images.map(img => (\n                    <GifGridItem \n                        key={img.id}\n                        {...img}\n                    />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport {getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n    }, [category])\n\n    return state // {data: [], loading: true}\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    const [categories, setCategories] = useState(['Fight club'])\n\n    return(\n    <>\n        <h2>Gif Expert App</h2>\n        <AddCategory setCategories={ setCategories } />\n        <hr />\n        <ol>\n            {\n                categories.map(category => (\n                    <GifGrid \n                        key={category}\n                        category={ category } \n                    />\n                ))\n            }\n        </ol>\n    </>\n)}\n\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'animate.css'\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}